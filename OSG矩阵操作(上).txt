#include"../Common/Common.h"
#include<osgViewer/Viewer>
#include<osgDB/ReadFile>
#include<osgGA/GUIActionAdapter>
#include<osgViewer/ViewerEventHandlers>
#include<osg/MatrixTransform>
#include<iostream>
#ifdef _DEBUG
#pragma comment(lib,"../Debug/Common.lib");
#else
#pragma comment(lib,"../Release/Common.lib");
#endif 

osg::ref_ptr<osg::Group> MatrixOperation()
{
	osg::ref_ptr<osg::Group> group=new osg::Group;
	osg::ref_ptr<osg::MatrixTransform> mx=new osg::MatrixTransform;
	osg::ref_ptr<osg::Node> node=osgDB::readNodeFile("glider.osg");
	osg::ref_ptr<osg::MatrixTransform> mx2=new osg::MatrixTransform;
	osg::ref_ptr<osg::MatrixTransform> mx3=new osg::MatrixTransform;
	osg::ref_ptr<osg::MatrixTransform> mx4=new osg::MatrixTransform;

	mx->addChild(node.get());
	mx->setMatrix(osg::Matrix::translate(5.0,0.0,0.0));
	mx2->addChild(mx);
	mx2->setUpdateCallback(new osg::AnimationPathCallback(osg::Vec3(0.0,0.0,0.0),osg::Z_AXIS,1.0));


	mx3->addChild(node.get());
	mx3->setMatrix(osg::Matrix::translate(-5.0,0.0,0.0));
	mx4->addChild(mx3);
	mx4->setUpdateCallback(new osg::AnimationPathCallback(osg::Vec3(0.0,0.0,0.0),osg::Z_AXIS,1.0));

	group->addChild(node.get());
	group->addChild(mx2.get());
	group->addChild(mx4);
	return group;
}

int main(){
	osg::ref_ptr<osgViewer::Viewer>view=new osgViewer::Viewer;
	view->setSceneData(MatrixOperation());

	return view->run();
}